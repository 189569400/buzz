macos_instance:
  image: ghcr.io/cirruslabs/macos-ventura-xcode:latest

setup_dependencies_template: &SETUP_DEPENDENCIES_TEMPLATE
  env:
    PYTHON_VERSION: "3.10.7"
    PATH: ${HOME}/.local/bin:/opt/homebrew/opt/python@3.10/bin:${PATH}
    BUZZ_CODESIGN_IDENTITY: ENCRYPTED[4c7e3ce59dc42025d6aa87a9adf09aa529eac7319f522e1b52c5c190234cf7da5b3622ab4117070e49891cbba7afdf40]
    BUZZ_KEYCHAIN_NOTARY_PROFILE: ENCRYPTED[8a06421168e11f921a0bd981ea01db0a57d729364f24a5d290a30b708237e5f574718dbc26d856a6b8c2570524b50408]
    BUILD_CERTIFICATE_BASE64: ENCRYPTED[b2dfad9875af42440e3dbb24472b737bd936c7ccaf2fba3681f6b92c1e9aa8c9be44d9a06da80eda5c27471364e386de]
    KEYCHAIN_PASSWORD: ENCRYPTED[e01d4f6eee93b3cf190843686b0e065b8f2a9641730b35e63b9528dda8aa813554fafc86664c9777e425e8f4f7621c58]
    P12_PASSWORD: ENCRYPTED[0bfe79e5a9348ea5245181d568d04b1dcd7ff34717cced115d8d80d85179f0957b2f49944ab9a19a8999126e077b15e1]
    APPLE_ID: ENCRYPTED[c0cafef2bad1756b404d617993f3eddb85654b4342b7a865d2ca07a545063d611bcd9ea2b795edd914fb41cc7aa03cef]
    APPLE_APP_PASSWORD: ENCRYPTED[8ac00ae3216a09541aa03304e72957c274908257a291adf3ee0ac2d38abe987a35bea52159ad00862485da9c68700468]
    APPLE_TEAM_ID: ENCRYPTED[4c7e3ce59dc42025d6aa87a9adf09aa529eac7319f522e1b52c5c190234cf7da5b3622ab4117070e49891cbba7afdf40]
    MACOS_CERTIFICATE: ENCRYPTED[b2dfad9875af42440e3dbb24472b737bd936c7ccaf2fba3681f6b92c1e9aa8c9be44d9a06da80eda5c27471364e386de]

  submodules_script:
    - git submodule init
    - git submodule update

  python_script:
    - brew update
    - brew install python@3.10
    - ln -s python3 /opt/homebrew/opt/python@3.10/bin/python
    #    - brew install pyenv
    #    - pyenv install $PYTHON_VERSION
    #    - pyenv global $PYTHON_VERSION
    #    - echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
    #    - echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
    #    - echo 'eval "$(pyenv init -)"' >> ~/.zshrc

  poetry_script:
    - curl -sSL https://install.python-poetry.org | python3 -
    - poetry config experimental.new-installer false
    - poetry config virtualenvs.create true
    - poetry config virtualenvs.in-project true

  #  ffmpeg_cache:
  #    folder: $HOME/Library/Caches/Homebrew
  #    populate_script:
  #      - brew install ffmpeg

  ffmpeg_script:
    - brew install ffmpeg

  python_dependencies_script:
    - poetry install

#test_task:
#  name: Test
#
#  <<: *SETUP_DEPENDENCIES_TEMPLATE
#
#  whisper_cpp_cache:
#    folder: $HOME/Library/Caches/Buzz
#
#  whisper_cache:
#    folder: $HOME/.cache/whisper
#
#  huggingface_cache:
#    folder: $HOME/.cache/huggingface
#
#  test_script:
#    - source .venv/bin/activate
#    - poetry run make test
#
#  coverage_artifacts:
#    path: coverage.xml

build_task:
  name: Build

  <<: *SETUP_DEPENDENCIES_TEMPLATE

  build_dependencies_script:
    - brew install create-dmg

  setup_script:
    - cd $HOME
    - echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
    - security create-keychain -p password build.keychain
    - security default-keychain -s build.keychain
    - security unlock-keychain -p password build.keychain
    - security import certificate.p12 -k build.keychain -P $P12_PASSWORD -T /usr/bin/codesign -T /usr/bin/pkgbuild
    - 'security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k password build.keychain'
    - xcrun notarytool store-credentials --apple-id "$APPLE_ID" --password "$APPLE_APP_PASSWORD" --team-id "$APPLE_TEAM_ID" notarytool --validate
    - security find-identity

  build_script:
    - source .venv/bin/activate
    - make bundle_mac MAC_TYPE=arm64
    - dist/Buzz.app/Contents/MacOS/Buzz

  zip_artifacts:
    name: buzz
    paths:
      - dist/Buzz-*.zip
      - dist/Buzz-*.dmg
      - buzz/whisper_cpp.py
