macos_instance:
  image: ghcr.io/cirruslabs/macos-ventura-base:latest

setup_dependencies_template: &SETUP_DEPENDENCIES_TEMPLATE
  env:
    PYTHON_VERSION: "3.10.7"

  submodules_script:
    - git submodule init
    - git submodule update

  python_script:
    - brew update
    - brew install pyenv
    - pyenv install $PYTHON_VERSION
    - pyenv global $PYTHON_VERSION
    - echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
    - echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
    - echo 'eval "$(pyenv init -)"' >> ~/.zshrc

  poetry_script:
    - source ~/.zshrc
    - curl -sSL https://install.python-poetry.org | python3 -
    - echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.zshrc
    - source ~/.zshrc
    - poetry config experimental.new-installer false
    - poetry config virtualenvs.create true
    - poetry config virtualenvs.in-project true

  #  ffmpeg_script:
  #    - brew install ffmpeg

  dependencies_cache:
    folder: .venv
    fingerprint_script: cat poetry.lock
    populate_script:
      - source ~/.zshrc
      - poetry install

  whisper_cpp_cache:
    folder: $HOME/Library/Caches/Buzz

  whisper_cache:
    folder: $HOME/.cache/whisper

  huggingface_cache:
    folder: $HOME/.cache/huggingface

#test_task:
#  name: Test
#
#  <<: *SETUP_DEPENDENCIES_TEMPLATE
#
#  test_script:
#    - source ~/.zshrc
#    - poetry run make test
#
#  coverage_artifacts:
#    path: coverage.xml

build_task:
  name: Build

  <<: *SETUP_DEPENDENCIES_TEMPLATE

  build_script:
    - source ~/.zshrc
    - source .venv/bin/activate
    - brew install create-dmg
    - poetry run make bundle_mac
